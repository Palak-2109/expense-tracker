{"ast":null,"code":"var _jsxFileName = \"/home/polo/react/projects/app/01-starting-setup/src/components/NewExpense/NewExpense.js\",\n  _s = $RefreshSig$();\nimport \"./NewExpense.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewExpense() {\n  _s();\n  //   const [enteredInput, setEnteredInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: ''\n  //   });\n\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  //   function changeTitleHandler(event) {\n  //     setEnteredTitle(event.target.value);\n  //     // setEnteredInput({\n  //     //     ...enteredInput,\n  //     //     enteredTitle: event.target.value\n  //     // });\n  //     // setEnteredInput((prevState) => {\n  //     //     return {...prevState , enteredTitle: event.target.value};\n  //     // })\n  //   }\n  //   function changeAmountHandler(event) {\n  //     setEnteredAmount(event.target.value);\n  //     // setEnteredInput({\n  //     //     ...enteredInput,\n  //     //     enteredAmount: event.target.value\n  //     // });\n  //   }\n  //   function changeDateHandler(event) {\n  //     setEnteredDate(event.target.value);\n  //     // setEnteredInput({\n  //     //     ...enteredInput,\n  //     //     enteredDate: event.target.value\n  //     // });\n  //   }\n  //combined function of all the three diff handlers\n  function changeInputHandler(key, value) {\n    if (key === \"title\") setEnteredTitle(value);else if (key === \"date\") setEnteredDate(value);else setEnteredAmount(value);\n  }\n  function submitHandler(event) {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: enteredDate\n    };\n    setEnteredAmount('');\n    setEnteredDate('');\n    setEnteredTitle('');\n    //now that we have prevented the default behaviour, it will not reload on form submission, so we have to manually \n    // reset the form values\n    console.log(expenseData);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-input-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: event => changeInputHandler(\"title\", event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-input-amount\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: enteredAmount,\n          step: \"0.01\",\n          min: \"0\",\n          onChange: event => changeInputHandler(\"amount\", event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-input-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: enteredDate,\n          onChange: event => changeInputHandler(\"date\", event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-submit-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(NewExpense, \"cQceuCgozgRBnFcek1NBqBcFFts=\");\n_c = NewExpense;\nexport default NewExpense;\nvar _c;\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","NewExpense","_s","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","changeInputHandler","key","value","submitHandler","event","preventDefault","expenseData","title","amount","date","console","log","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","step","min","_c","$RefreshReg$"],"sources":["/home/polo/react/projects/app/01-starting-setup/src/components/NewExpense/NewExpense.js"],"sourcesContent":["import \"./NewExpense.css\";\nimport { useState } from \"react\";\nfunction NewExpense() {\n\n  //   const [enteredInput, setEnteredInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: ''\n  //   });\n\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n//   function changeTitleHandler(event) {\n//     setEnteredTitle(event.target.value);\n//     // setEnteredInput({\n//     //     ...enteredInput,\n//     //     enteredTitle: event.target.value\n//     // });\n//     // setEnteredInput((prevState) => {\n//     //     return {...prevState , enteredTitle: event.target.value};\n//     // })\n//   }\n//   function changeAmountHandler(event) {\n//     setEnteredAmount(event.target.value);\n//     // setEnteredInput({\n//     //     ...enteredInput,\n//     //     enteredAmount: event.target.value\n//     // });\n//   }\n//   function changeDateHandler(event) {\n//     setEnteredDate(event.target.value);\n//     // setEnteredInput({\n//     //     ...enteredInput,\n//     //     enteredDate: event.target.value\n//     // });\n//   }\n  //combined function of all the three diff handlers\n  function changeInputHandler(key, value) {\n    if (key === \"title\") setEnteredTitle(value);\n    else if (key === \"date\") setEnteredDate(value);\n    else setEnteredAmount(value);\n  }\n  function submitHandler(event){\n    event.preventDefault();\n    const expenseData = {\n        title: enteredTitle,\n        amount: enteredAmount,\n        date: enteredDate\n    }\n    setEnteredAmount('')\n    setEnteredDate('')\n    setEnteredTitle('')\n    //now that we have prevented the default behaviour, it will not reload on form submission, so we have to manually \n    // reset the form values\n    console.log(expenseData)\n  }\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"form-input\">\n        <div className=\"form-input-title\">\n          <label>Title</label>\n          {/* <input type=\"text\" onChange={changeTitleHandler}></input> */}\n          <input\n            type=\"text\"\n            value={enteredTitle}\n            onChange={(event) =>\n              changeInputHandler(\"title\", event.target.value)\n            }\n          ></input>\n        </div>\n        <div className=\"form-input-amount\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            value={enteredAmount}\n            step=\"0.01\"\n            min=\"0\"\n            onChange={(event) =>\n              changeInputHandler(\"amount\", event.target.value)\n            }\n          ></input>\n        </div>\n        <div className=\"form-input-date\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            value={enteredDate}\n            onChange={(event) => changeInputHandler(\"date\", event.target.value)}\n          ></input>\n        </div>\n      </div>\n      <div className=\"form-submit-button\">\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n}\nexport default NewExpense;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}